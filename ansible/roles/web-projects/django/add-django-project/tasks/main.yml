---
- tags: Add_site_entry_to_local_machine_hosts_file
  run_once: true
  include_role:
    name: "{{ role_path }}/../../../helpers/add-project-entry-to-hosts-file"

- tags: Setup_project_database
  include_role:
    name: "{{ role_path }}/../../../helpers/setup-project-database"

- name: Create_docker_secret_for_project_db_user_password | {{ role_name | basename }}
  tags: Create_docker_secret_for_project_db_user_password
  when: inventory_hostname == groups['docker-swarm-manager'][0]
  docker_secret:
    name: "{{ deployment_env }}_{{ project }}_db_user_password"
    data: "{{ hostvars[ db_node ]['db_user_password']['stdout'] }}"

- name: Create_project_virtual_environment | {{ role_name | basename }}
  tags: Create_project_virtual_environment
  when: inventory_hostname in groups['webserver']
  include_role:
    name: "{{ role_path }}/../../../helpers/create-venv"
  vars:
    venv_name: "{{ deployment_env }}_{{ project }}"
    venv_packages: "psycopg2-binary django=={{ django_version }} {{ extra_python_packages }}"

- tags: apps_directory_operations
  when: inventory_hostname == groups['webserver'][0]
  block:
  - name: Create_project_directory | {{ role_name | basename }}
    tags: Create_project_directory
    file:
      path: "{{ project_dir }}"
      state: directory

  - name: Install_django_project | {{ role_name | basename }}
    tags: Install_django_project
    docker_container:
      name: install_django_project
      detach: false
      cleanup: true
      image: "{{ docker_images['uwsgi'] }}"
      pull: true
      user: "{{ ansible_user_uid }}:{{ ansible_user_gid }}"
      volumes:
        - "{{ python_venvs_dir }}:{{ python_venvs_dir }}"
        - "{{ apps_dir }}:{{ apps_dir }}"
      command: bash -c "
        source {{ python_venvs_dir }}/{{ deployment_env }}_{{ project }}/bin/activate &&
        django-admin startproject {{ project }} {{ project_dir }}"
    notify:
      - Django_migrate | common-handlers
      - Django_collect_static_files | common-handlers
      - Django_create_superuser | common-handlers

  - name: Project_settings | {{ role_name | basename }}
    tags: Project_settings
    block:
    - blockinfile:
        path: "{{ project_dir }}/{{ project }}/settings.py"
        block: |
          STATIC_ROOT = os.path.join(BASE_DIR, 'static')

          DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.postgresql',
                  'NAME': '{{ db }}',
                  'USER': '{{ db_user }}',
                  'HOST': '{{ clients_db_host }}',
                  'PORT': '5432',
              }
          }
        marker: "# {mark} PROJECT SETTINGS ADDED BY ANSIBLE ROLE {{ role_name | basename }}"

    - include_role:
        name: "{{ role_path }}/../helpers/settings-management"

  - name: Create_uwsgi_vassal_file | {{ role_name | basename }}
    tags: Create_uwsgi_vassal_file
    include_role:
      name: "{{ role_path }}/../helpers/create-uwsgi-vassal-file"

  - name: Create_nginx_config_file | {{ role_name | basename }}
    tags: Create_nginx_config_file
    include_role:
      name: "{{ role_path }}/../helpers/create-nginx-config-file"

- name: update_uwsgi_docker_service_with_project_secrets | {{ role_name | basename }}
  tags: update_uwsgi_docker_service_with_project_secrets
  when: inventory_hostname == groups['docker-swarm-manager'][0]
  command: "docker service update
          --secret-add source={{ deployment_env }}_{{ project }}_db_user_password,target={{ deployment_env }}_{{ project }}_db_user_password,uid={{ ansible_user_uid }},mode=0400
          --secret-add source={{ deployment_env }}_{{ project }}_secret_key,target={{ deployment_env }}_{{ project }}_secret_key,uid={{ ansible_user_uid }},mode=0400
          web-stack_uwsgi"
