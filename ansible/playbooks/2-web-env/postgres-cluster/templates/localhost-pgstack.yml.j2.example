
##########################################################################
##             AUTO-GENERATED FILE              ##
##         BUILD_NUMBER=Sat  2 Jun 2018 15:28:51 +07        ##
##########################################################################

#version: '2'
version: '3.7'
#networks:
#  cluster:
#    driver: bridge
networks:
  web-stack_web:
    external: true

volumes:
  pgmaster:
  pgslave1:
#  pgslave2:
#  pgslave3:
#  pgslave4:
  backup:
  pgpool:

services:
  pgmaster:
#    build:
#      context: ../src
#      dockerfile: Postgres-10-Repmgr-4.0.Dockerfile
    image: {{ docker_images['postgres-repmgr'] }}
    environment:
      NODE_ID: 1 # Integer number of node (not required if can be extracted from NODE_NAME var, e.g. node-45 => 1045)
      NODE_NAME: node1 # Node name
      CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)

#      PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
      PARTNER_NODES: "pgmaster,pgslave1"
      REPLICATION_PRIMARY_HOST: pgmaster # That should be ignored on the same node

      NODE_PRIORITY: 100  # (default: 100)

#      SSH_ENABLE: 1

      #database we want to use for application
#      POSTGRES_PASSWORD: monkey_pass
#      POSTGRES_USER: monkey_user
#      POSTGRES_DB: monkey_db
      POSTGRES_PASSWORD: {{ pgcluster_postgres_password }}
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

      CLEAN_OVER_REWIND: 0

      CONFIGS_DELIMITER_SYMBOL: ;
#      CONFIGS: "listen_addresses:'*';max_replication_slots:5"
                  # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                  # used for pgpool.conf file
      CONFIGS: "listen_addresses:'*';max_replication_slots:5;max_connections:100"

      #defaults:
      CLUSTER_NAME: pg_cluster # default is pg_cluster

      REPLICATION_DB: replication_db # default is replication_db
      REPLICATION_USER: replication_user # default is replication_user
#      REPLICATION_PASSWORD: replication_pass # default is replication_pass
      REPLICATION_PASSWORD: {{ pgcluster_replication_password }}

    ports:
      - 5422:5432
    volumes:
      - pgmaster:/var/lib/postgresql/data
#      - ./ssh/:/home/postgres/.ssh/keys
    networks:
#      cluster:
#        aliases:
#          - pgmaster
      web-stack_web:
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.postgres-cluster-pgmaster == true

#<<< Branch 1
  pgslave1:
#    build:
#      context: ../src
#      dockerfile: Postgres-10-Repmgr-4.0.Dockerfile
    image: {{ docker_images['postgres-repmgr'] }}
    environment:
      NODE_ID: 2
      NODE_NAME: node2
      CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)

#      SSH_ENABLE: 1
#      PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
      PARTNER_NODES: "pgmaster,pgslave1"
      REPLICATION_PRIMARY_HOST: pgmaster

      CLEAN_OVER_REWIND: 1

      CONFIGS_DELIMITER_SYMBOL: ;
#      CONFIGS: "max_replication_slots:10" #some overrides
      CONFIGS: "listen_addresses:'*';max_replication_slots:5;max_connections:100"

      REPLICATION_DB: replication_db # default is replication_db
      REPLICATION_USER: replication_user # default is replication_user
#      REPLICATION_PASSWORD: replication_pass # default is replication_pass
      REPLICATION_PASSWORD: {{ pgcluster_replication_password }}

    ports:
      - 5441:5432
    volumes:
      - pgslave1:/var/lib/postgresql/data
#      - ./ssh:/home/postgres/.ssh/keys
    networks:
#      cluster:
#        aliases:
#          - pgslave1
      web-stack_web:
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.postgres-cluster-pgslave1 == true

  # Add more slaves if required

#>>> Branch 1

  backup:
#    build:
#      context: ../src
#      dockerfile: Barman-2.4-Postgres-10.Dockerfile
    image: {{ docker_images['barman-postgres'] }}
    environment:
      REPLICATION_USER: replication_user # default is replication_user
#      REPLICATION_PASSWORD: replication_pass # default is replication_pass
      REPLICATION_PASSWORD: {{ pgcluster_replication_password }}
      REPLICATION_HOST: pgmaster

#      POSTGRES_PASSWORD: monkey_pass
#      POSTGRES_USER: monkey_user
#      POSTGRES_DB: monkey_db
      POSTGRES_PASSWORD: {{ pgcluster_postgres_password }}
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

#      SSH_ENABLE: 1

#      BACKUP_SCHEDULE: "*/30 */5 * * *"
      BACKUP_SCHEDULE: "14 2 * * *"

    volumes:
      - backup:/var/backups
#      - ./ssh:/home/postgres/.ssh/keys
    networks:
#      cluster:
#        aliases:
#          - backup
      web-stack_web:
    deploy:
      replicas: {{ ( groups['postgres-cluster-backup'] | length ) * 1 }}
      placement:
        constraints:
          - node.labels.postgres-cluster-backup == true

  pgpool:
#    build:
#      context: ../src
#      dockerfile: Pgpool-3.7-Postgres-10.Dockerfile
    image: {{ docker_images['pgpool-postgres'] }}
    environment:
      PCP_USER: pcp_user
#      PCP_PASSWORD: pcp_pass
      PCP_PASSWORD: {{ pgcluster_pgpool_pcp_password }}

      WAIT_BACKEND_TIMEOUT: 60

#      CHECK_USER: monkey_user
#      CHECK_PASSWORD: monkey_pass
      CHECK_USER: postgres
      CHECK_PASSWORD: {{ pgcluster_postgres_password }}

      CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy

#      SSH_ENABLE: 1

#      DB_USERS: monkey_user:monkey_pass # in format user:password[,user:password[...]]
      DB_USERS: postgres:{{ pgcluster_postgres_password }}

#      BACKENDS: "0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave1::::,3:pgslave3::::,2:pgslave2::::" #,4:pgslaveDOES_NOT_EXIST::::
      BACKENDS: "0:pgmaster::::,1:pgslave1::::"
            # in format num:host:port:weight:data_directory:flag[,...]
            # defaults:
            #   port: 5432
            #   weight: 1
            #   data_directory: /var/lib/postgresql/data
            #   flag: ALLOW_TO_FAILOVER
#      REQUIRE_MIN_BACKENDS: 3 # minimal number of backends to start pgpool (some might be unreachable)
      REQUIRE_MIN_BACKENDS: 1

#      CONFIGS: "num_init_children:250,max_pool:4"
      CONFIGS: "num_init_children:16,max_pool:4"
            # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
            # used for pgpool.conf file
    ports:
      - 5430:5432
      - 9898:9898 # PCP
    volumes:
#      - ./ssh:/home/postgres/.ssh/keys
      - pgpool:/usr/local/etc

    networks:
#      cluster:
#        aliases:
#          - pgpool
      web-stack_web:
    deploy:
      replicas: {{ ( groups['postgres-cluster-pgpool'] | length ) * 1 }}
      placement:
        constraints:
          - node.labels.postgres-cluster-pgpool == true
